"""
Django settings for ebalapi project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
import platform
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-^h45_nqfne+ky331j8)rot#uz4)=j$+aet5=*d$(&xi#qar4-('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'fontawesomefree',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_ace',
    'ebalapi_service',
    'rest_framework',
    'rest_framework.authtoken',
    'import_export',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ebalapi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ebalapi.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

if platform.system() == "Windows":
    TIME_ZONE = 'Europe/Kyiv'
else:
    TIME_ZONE = 'Europe/Kiev'

USE_I18N = True

USE_TZ = True

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
    }

}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))
STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(PROJECT_ROOT, 'static')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

JAZZMIN_UI_TWEAKS = {
    # "theme": "flatly",
    # "dark_mode_theme": "default",
}

JAZZMIN_SETTINGS = {
    # "topmenu_links": [
    #
    #     # Url that gets reversed (Permissions can be added)
    #     {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
    #
    #     # model admin to link to (Permissions checked against model)
    #     # {"model": "auth.User"},
    #     {"app": "auth", "name": "Admin"},
    #
    #     # App with dropdown menu to all its models pages (Permissions checked against models)
    #     {"app": "bot"},
    # ],
    #
    # "order_with_respect_to": [
    #     "bot",
    #     "bot.usercard",
    #     "bot.userrank",
    #     'bot.booking',
    #     'bot.feedbackmessage',
    #
    #     "bot.achievement",
    #     "bot.achievementinstance",
    #
    #     "bot.coupon",
    #     "bot.couponinstance",
    #
    #     'bot.restaurant',
    #
    #     'bot.productcategory',
    #     'bot.product',
    #
    #     "auth", "authtoken"
    # ],
    #
    # "icons": {
    #     "auth": "fas fa-users-cog",
    #     "auth.user": "fas fa-user",
    #     "auth.Group": "fas fa-users",
    #
    #     "bot.usercard": "fas fa-id-card",
    #     "bot.coupon": "fas fa-tag",
    #     "bot.couponinstance": "fas fa-tags",
    #     "bot.achievement": "fas fa-trophy",
    #     "bot.achievementinstance": "fas fa-medal",
    #     "bot.userrank": "fas fa-star",
    #     "authtoken.tokenproxy": "fas fa-key",
    #     "bot.booking": "fa fa-calendar",
    #     "bot.restaurant": "fa fa-map-marker",
    #     "bot.product": "fa fa-shopping-cart",
    #     "bot.productcategory": "fa fa-table",
    #     "bot.feedbackmessage": "fa fa-comments",
    # },
    # # "language_chooser": True,
}

REST_FRAMEWORK = {
    # 'DEFAULT_RENDERER_CLASSES': [
    #     'rest_framework.renderers.JSONRenderer',
    # ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ]
}

IMPORT_EXPORT_USE_TRANSACTIONS = True
